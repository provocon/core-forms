<?xml version="1.0" encoding="UTF-8"?>
<Container xmlns:fx="http://ns.adobe.com/mxml/2009"
           xmlns:exml="http://www.jangaroo.net/exml/0.8"
           xmlns="exml:ext.config"
           xmlns:ui="exml:com.coremedia.ui.config"
           xmlns:dragdrop="com.tallence.formeditor.studio.dragdrop.*"
           xmlns:studio="com.tallence.formeditor.studio.*">
  <fx:Metadata>
    [ResourceBundle('com.tallence.formeditor.studio.bundles.FormEditor')]
    [ResourceBundle('com.coremedia.cms.editor.Editor')]
  </fx:Metadata>

  <fx:Script><![CDATA[
    import com.coremedia.ui.data.ValueExpression;
    import com.tallence.formeditor.studio.helper.FormElementsManager;

    public static const xtype:String = "com.tallence.formeditor.studio.config.appliedElementsContainer";

    private var config:AppliedElementsContainer;

    /*
     * Content bean value expression
     */
    [Bindable]
    public var bindTo:ValueExpression;

    /*
     * An optional ValueExpression which makes the component read-only if it is evaluated to true.
     */
    [Bindable]
    public var forceReadOnlyValueExpression:ValueExpression;

    /**
     * The form elements manager contains the value expression evaluating to the applied form elements. The value
     * expression that controls whether a drag/drop operation is active can also be accessed via this manager.
     */
    [Bindable]
    public var formElementsManager:FormElementsManager;

    public native function AppliedElementsContainer(config:AppliedElementsContainer = null);
    ]]>
      </fx:Script>

  <items>
    <dragdrop:FormElementDropContainer
            formElementsManager="{config.formElementsManager}"
            forceReadOnlyValueExpression="{config.forceReadOnlyValueExpression}"/>
    <Container>
      <plugins>
        <ui:BindComponentsPlugin configBeanParameterName="formElement"
                                 valueExpression="{config.formElementsManager.getFormElementsVE()}">
          <ui:template>
            <studio:AppliedFormElementContainer bindTo="{config.bindTo}"
                                                forceReadOnlyValueExpression="{config.forceReadOnlyValueExpression}"
                                                formElementsManager="{config.formElementsManager}"/>
          </ui:template>
        </ui:BindComponentsPlugin>
      </plugins>
    </Container>
  </items>

</Container>
