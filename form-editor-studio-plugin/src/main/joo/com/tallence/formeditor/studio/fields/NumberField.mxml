<?xml version="1.0" encoding="UTF-8"?>
<fields:NumberFieldBase
        xmlns:fx="http://ns.adobe.com/mxml/2009"
        xmlns="exml:ext.config"
        xmlns:editor="exml:com.coremedia.cms.editor.sdk.config"
        xmlns:ui="exml:com.coremedia.ui.config"
        xmlns:fields="com.tallence.formeditor.studio.fields.*"
        xmlns:plugins="com.tallence.formeditor.studio.plugins.*">
  <fx:Script><![CDATA[
    public static const xtype:String = "com.tallence.formeditor.studio.editor.fields.numberField";

    private var config:NumberField;

    [Bindable]
    public var emptyText:String;

    [Bindable]
    public var minValue:Number;

    [Bindable]
    public var maxValue:Number;

    public native function NumberField(config:NumberField = null);
    ]]>
  </fx:Script>

  <fields:items>
    <FieldContainer fieldLabel="{config.fieldLabel}">
      <items>
        <!--
          - optional parameters for min and max added.
          - cannot use the constant Number.MIN_VALUE as default for minValue, this will cause an error in Studio.
            according to the documentation of Number.MIN_VALUE: "The smallest representable number overall is actually <code>-Number.MAX_VALUE</code>."
            that's why we are using -Number.MAX_VALUE as default here.
        -->
        <ui:StatefulNumberField
                emptyText="{config.emptyText ? config.emptyText : resourceManager.getString('com.tallence.formeditor.studio.bundles.FormEditor', 'FormEditor_element_numberField_emptyText')}"
                minValue="{config.minValue ? config.minValue : -Number.MAX_VALUE}"
                maxValue="{config.maxValue ? config.maxValue : Number.MAX_VALUE}"
                width="100%">
          <ui:plugins>
            <ui:BindPropertyPlugin bidirectional="true"
                                   bindTo="{getPropertyVE(config)}"/>
            <editor:BindDisablePlugin bindTo="{config.bindTo}"
                                      forceReadOnlyValueExpression="{config.forceReadOnlyValueExpression}"/>
            <plugins:ShowFormIssuesPlugin issuesVE="{config.formIssuesVE}"
                                          propertyName="{config.propertyName}"
                                          propertyPathVE="{config.propertyPathVE}"/>
          </ui:plugins>
        </ui:StatefulNumberField>
      </items>
    </FieldContainer>
  </fields:items>

</fields:NumberFieldBase>
