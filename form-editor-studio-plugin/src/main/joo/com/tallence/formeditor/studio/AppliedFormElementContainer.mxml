<?xml version="1.0" encoding="UTF-8"?>
<local:AppliedFormElementsContainerBase
        xmlns:fx="http://ns.adobe.com/mxml/2009"
        xmlns:editor="exml:com.coremedia.cms.editor.sdk.config"
        xmlns="exml:ext.config"
        xmlns:exml="http://www.jangaroo.net/exml/0.8"
        xmlns:editor="exml:com.coremedia.cms.editor.sdk.config"
        xmlns:dragdrop="com.tallence.formeditor.studio.dragdrop.*"
        xmlns:local="com.tallence.formeditor.studio.*"
        xmlns:u="exml:untyped"
        xmlns:ui="exml:com.coremedia.ui.config"
        xmlns:plugins="com.tallence.formeditor.studio.plugins.*"
        xmlns:components="com.tallence.formeditor.studio.components.*">

  <fx:Script><![CDATA[
    import com.coremedia.ui.data.ValueExpressionFactory;

    public static const xtype:String = "com.tallence.formeditor.studio.config.appliedFormElementContainer";

    private var config:AppliedFormElementContainer;

    public native function AppliedFormElementContainer(config:AppliedFormElementContainer = null);
    ]]>
    </fx:Script>

  <local:items>
    <!-- We need to overwrite the collapsedCls. Otherwise the header would have a transparent background.  -->
    <components:StateFulCollapsiblePanel margin="10 15 0 10"
                             itemId="{FORM_ELEMENT_PANEL}"
                             collapsedCls="collapsed-form-element"
                             animCollapse="false">
      <components:plugins>
        <ui:BindPropertyPlugin bidirectional="false"
                               componentProperty="collapsed"
                               transformer="{collapsedTransformer}"
                               bindTo="{config.formElementsManager.getCollapsedElementVE()}"/>
        <ui:BindPropertyPlugin bidirectional="false"
                               componentProperty="title"
                               ifUndefined="{getTitleUndefinedValue(config.formElement)}"
                               transformer="{titleTransformer}"
                               bindTo="{config.formElement.getFormElementVE().extendBy('name')}"/>
        <plugins:ShowFormIssuesPlugin issuesVE="{config.bindTo.extendBy(['issues'])}"
                                      propertyPathVE="{ValueExpressionFactory.createFromValue(config.formElement.getPropertyPath())}"/>
      </components:plugins>
      <components:items>
        <!-- The form element editor is added dynamically bye the
        {@link com.coremedia.ui.util.IReusableComponentsService} -->
      </components:items>
      <components:header>
        <!--Using focusableContainer(cm9-17 style) and enableFocusableContainer(cm9-18 style) to be compatible with all cm9-versions-->
        <Header titlePosition="2.0"
                itemId="{FORM_ELEMENT_HEADER}"
                u:focusableContainer="false"
                u:enableFocusableContainer="false"
                itemPosition="2">
          <items>
            <ui:IconButton
                iconCls="{resourceManager.getString('com.coremedia.cms.editor.Editor', 'lifecycleStatus_deleted_icon')}"
                itemId="removeButton"
                ariaLabel="{resourceManager.getString('com.tallence.formeditor.studio.bundles.FormEditor', 'FormEditor_tooltip_deletethis')}"
                handler="{removeElementHandler}">
                <ui:plugins>
                  <editor:BindDisablePlugin bindTo="{config.bindTo}"
                                            forceReadOnlyValueExpression="{config.forceReadOnlyValueExpression}"/>
                </ui:plugins>
            </ui:IconButton>
          </items>
        </Header>
      </components:header>
    </components:StateFulCollapsiblePanel>
    <dragdrop:FormElementDropContainer formElementsManager="{config.formElementsManager}"
                                       formElementId="{config.formElement.getId()}"
                                       forceReadOnlyValueExpression="{config.forceReadOnlyValueExpression}"/>

  </local:items>

</local:AppliedFormElementsContainerBase>
